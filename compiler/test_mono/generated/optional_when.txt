procedure Num.21 (#Attr.2, #Attr.3):
    let Num.275 : I64 = lowlevel NumMul #Attr.2 #Attr.3;
    ret Num.275;

procedure Test.1 (Test.6):
    let Test.21 : Int1 = false;
    let Test.22 : Int1 = lowlevel Eq Test.21 Test.6;
    if Test.22 then
        let Test.8 : I64 = 3i64;
        ret Test.8;
    else
        let Test.10 : I64 = 5i64;
        ret Test.10;

procedure Test.1 (Test.6):
    let Test.29 : Int1 = StructAtIndex 1 Test.6;
    let Test.30 : Int1 = false;
    let Test.31 : Int1 = lowlevel Eq Test.30 Test.29;
    if Test.31 then
        let Test.8 : I64 = StructAtIndex 0 Test.6;
        ret Test.8;
    else
        let Test.10 : I64 = StructAtIndex 0 Test.6;
        ret Test.10;

procedure Test.0 ():
    let Test.39 : I64 = 7i64;
    let Test.40 : Int1 = false;
    let Test.38 : {I64, Int1} = Struct {Test.39, Test.40};
    let Test.34 : I64 = CallByName Test.1 Test.38;
    let Test.37 : Int1 = false;
    let Test.35 : I64 = CallByName Test.1 Test.37;
    let Test.24 : I64 = CallByName Num.21 Test.34 Test.35;
    let Test.32 : I64 = 11i64;
    let Test.33 : Int1 = true;
    let Test.26 : {I64, Int1} = Struct {Test.32, Test.33};
    let Test.25 : I64 = CallByName Test.1 Test.26;
    let Test.16 : I64 = CallByName Num.21 Test.24 Test.25;
    let Test.23 : Int1 = true;
    let Test.17 : I64 = CallByName Test.1 Test.23;
    let Test.15 : I64 = CallByName Num.21 Test.16 Test.17;
    ret Test.15;
